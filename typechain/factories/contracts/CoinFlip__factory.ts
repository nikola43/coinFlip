/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { CoinFlip, CoinFlipInterface } from "../../contracts/CoinFlip";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "buyLinkThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dexRouter",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeBnbHoldersThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "bet",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "mode",
        type: "uint256",
      },
    ],
    name: "flipCoin",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fundAndRequestRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLinkBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSubscriptionDetails",
    outputs: [
      {
        internalType: "uint96",
        name: "balance",
        type: "uint96",
      },
      {
        internalType: "uint64",
        name: "reqCount",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "consumers",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRequestExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveBnbPercentageForHolders",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reservedBnbForBuyLink",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reservedBnbForBuyLinkPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reservedBnbHolders",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_requestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "topUpSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "usersFlips",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "flipNumber",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "win",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usersFlipsCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawBnb",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wordsIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a0604052600280546001600160a01b0319908116736a2aad07396b36fe02a22b33cf443582f682c82f17909155600380549091167384b9b910527ad5c03a9ca831909e21e236ea7b061781557fd4bb89654db74673a187bd804519e65e3f71a52bc55f11da7601a13dcf5053146004556005805466030003000186a06001600160501b031990911617905560006009819055600c819055600d55600a600e55600f5567016345785d8a00006010819055601155348015620000c057600080fd5b506002546001600160a01b039081166080819052600080546001600160a01b03199081169092179055600354600180548316919093161790915560088054909116331790556200010f62000140565b6000600b55601280546001600160a01b031916739ac64cc6e4415144c455bd8e4837fea55603e5c31790556200029a565b6008546001600160a01b031633146200015857600080fd5b60008054906101000a90046001600160a01b03166001600160a01b031663a21a23e46040518163ffffffff1660e01b81526004016020604051808303816000875af1158015620001ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d2919062000268565b60018054600160a01b600160e01b031916600160a01b6001600160401b0393841681029190911791829055600054604051631cd0704360e21b81529190920490921660048301523060248301526001600160a01b031690637341c10c90604401600060405180830381600087803b1580156200024d57600080fd5b505af115801562000262573d6000803e3d6000fd5b50505050565b6000602082840312156200027b57600080fd5b81516001600160401b03811681146200029357600080fd5b9392505050565b60805161168d620002bd6000396000818161077301526107b5015261168d6000f3fe6080604052600436106101435760003560e01c80636c8ceed5116100b0578063d627f3631161006c578063d627f36314610391578063e0c86289146103a7578063e3978240146103bc578063e89e106a146103dc578063f6eaffc8146103f2578063fb496fdb1461041257005b80636c8ceed51461029b5780637aa51754146102b15780638dc654a2146102c65780639233ab78146102db578063a0f0a1e3146102f1578063a3ced7b91461036c57005b806324e9edb0116100ff57806324e9edb01461021a578063331492ed1461022f578063412b07e51461024557806350c5f9751461025b57806352253d581461027057806358ecb16b1461028657005b80630758d9241461014c5780630c997597146101895780630d5de6df1461019c5780631da0603a146101c15780631fe543e3146101d657806321e71717146101f657005b3661014a57005b005b34801561015857600080fd5b5060125461016c906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61014a6101973660046110f3565b610428565b3480156101a857600080fd5b506101b1610656565b6040516101809493929190611163565b3480156101cd57600080fd5b5061014a6106ee565b3480156101e257600080fd5b5061014a6101f1366004611220565b610768565b34801561020257600080fd5b5061020c600b5481565b604051908152602001610180565b34801561022657600080fd5b5061014a6107f0565b34801561023b57600080fd5b5061020c60105481565b34801561025157600080fd5b5061020c60115481565b34801561026757600080fd5b5061020c610899565b34801561027c57600080fd5b5061020c600f5481565b34801561029257600080fd5b5061014a61090b565b3480156102a757600080fd5b5061020c600d5481565b3480156102bd57600080fd5b5061014a6109ed565b3480156102d257600080fd5b5061014a610a0e565b3480156102e757600080fd5b5061020c600e5481565b3480156102fd57600080fd5b5061034061030c3660046112c2565b600a6020526000908152604090208054600182015460028301546003909301546001600160a01b0390921692909160ff1684565b604080516001600160a01b03909516855260208501939093529183015215156060820152608001610180565b34801561037857600080fd5b50610381610b0d565b6040519015158152602001610180565b34801561039d57600080fd5b5061020c60095481565b3480156103b357600080fd5b5061014a610bd0565b3480156103c857600080fd5b5060085461016c906001600160a01b031681565b3480156103e857600080fd5b5061020c60075481565b3480156103fe57600080fd5b5061020c61040d3660046112c2565b610be7565b34801561041e57600080fd5b5061020c600c5481565b600061043382610c08565b9050803410156104775760405162461bcd60e51b815260206004820152600a602482015269131bddc8185b5bdd5b9d60b21b60448201526064015b60405180910390fd5b600060066009548154811061048e5761048e6112db565b90600052602060002001549050600084156104b6576104ae600283611307565b1590506104c6565b6104c1600283611307565b151590505b6040805160808101825233815242602080830191825282840186815285151560608501908152600b546000908152600a909352948220845181546001600160a01b0319166001600160a01b039091161781559251600184015551600283015592516003909101805460ff191691151591909117905560098054919261054a83611331565b9091555050600b805490600061055f83611331565b919050555060095460020361057b57600060095561057b61092a565b60006064600e543461058d919061134a565b6105979190611361565b905060006064600f54346105ab919061134a565b6105b59190611361565b905081600c60008282546105c99190611375565b9250508190555080600d60008282546105e29190611375565b9091555050601154600c541061060d576105fa610cd0565b610602610e8b565b6000600c819055600d555b831561064c57336108fc61062234600261134a565b6040518115909202916000818181858888f1935050505015801561064a573d6000803e3d6000fd5b505b5050505050505050565b6000805460015460405163523e3b4b60e11b8152600160a01b90910467ffffffffffffffff166004820152829182916060916001600160a01b03169063a47c769690602401600060405180830381865afa1580156106b8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106e091908101906113a4565b935093509350935090919293565b6008546001600160a01b0316331461070557600080fd5b6008546040516000916001600160a01b03169047908381818185875af1925050503d8060008114610752576040519150601f19603f3d011682016040523d82523d6000602084013e610757565b606091505b505090508061076557600080fd5b50565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107e25760405163073e64fd60e21b81523360048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016602482015260440161046e565b6107ec8282610fe5565b5050565b6008546001600160a01b0316331461080757600080fd5b600054600154600854604051630d7ae1d360e41b8152600160a01b90920467ffffffffffffffff1660048301526001600160a01b0390811660248301529091169063d7ae1d3090604401600060405180830381600087803b15801561086b57600080fd5b505af115801561087f573d6000803e3d6000fd5b50506001805467ffffffffffffffff60a01b191690555050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156108e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610906919061148f565b905090565b6008546001600160a01b0316331461092257600080fd5b61092a610e8b565b600054600480546001546005546040516305d3b1d360e41b815293840192909252600160a01b900467ffffffffffffffff166024830152640100000000810461ffff16604483015263ffffffff808216606484015266010000000000009091041660848201526001600160a01b0390911690635d3b1d309060a4016020604051808303816000875af11580156109c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e8919061148f565b600755565b6008546001600160a01b03163314610a0457600080fd5b610a0c610e8b565b565b6008546001600160a01b03163314610a2557600080fd5b6001546008546040516370a0823160e01b81523060048201526001600160a01b039283169263a9059cbb92169083906370a0823190602401602060405180830381865afa158015610a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9e919061148f565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610ae9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076591906114a8565b60008054600154604051600160a01b90910467ffffffffffffffff16602482015282916001600160a01b03169060440160408051601f198184030181529181526020820180516001600160e01b0316633a0ab5f560e21b17905251610b7291906114f0565b600060405180830381855afa9150503d8060008114610bad576040519150601f19603f3d011682016040523d82523d6000602084013e610bb2565b606091505b5091505080806020019051810190610bca91906114a8565b91505090565b6008546001600160a01b0316331461092a57600080fd5b60068181548110610bf757600080fd5b600091825260209091200154905081565b600080828103610c20575066b1a2bc2ec50000610cca565b82600103610c37575067016345785d8a0000610cca565b82600203610c4e57506703782dace9d90000610cca565b82600303610c6557506706f05b59d3b20000610cca565b82600403610c7c5750670de0b6b3a7640000610cca565b82600503610c935750671bc16d674ec80000610cca565b60405162461bcd60e51b815260206004820152600c60248201526b696e76616c6964206d6f646560a01b604482015260640161046e565b92915050565b6000610d5d601260009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4c919061150c565b6003546001600160a01b0316610ff8565b601254600c5460405163d06ca61f60e01b81529293506000926001600160a01b039092169163d06ca61f91610d96918690600401611527565b600060405180830381865afa158015610db3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ddb9190810190611548565b600181518110610ded57610ded6112db565b6020908102919091010151601254600c549192506001600160a01b031690637ff36ab590838530610e20426103e8611375565b6040518663ffffffff1660e01b8152600401610e3f94939291906115d9565b60006040518083038185885af1158015610e5d573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052610e869190810190611548565b505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610ed4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef8919061148f565b905060008111610f3e5760405162461bcd60e51b81526020600482015260116024820152705a65726f206c696e6b2062616c616e636560781b604482015260640161046e565b60015460005460408051600160a01b840467ffffffffffffffff1660208201526001600160a01b0393841693634000aea09316918591016040516020818303038152906040526040518463ffffffff1660e01b8152600401610fa29392919061160e565b6020604051808303816000875af1158015610fc1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ec91906114a8565b8051610e86906006906020840190611085565b604080516002808252606080830184529260009291906020830190803683370190505090508381600081518110611031576110316112db565b60200260200101906001600160a01b031690816001600160a01b0316815250508281600181518110611065576110656112db565b6001600160a01b0390921660209283029190910190910152905092915050565b8280548282559060005260206000209081019282156110c0579160200282015b828111156110c05782518255916020019190600101906110a5565b506110cc9291506110d0565b5090565b5b808211156110cc57600081556001016110d1565b801515811461076557600080fd5b6000806040838503121561110657600080fd5b8235611111816110e5565b946020939093013593505050565b600081518084526020808501945080840160005b838110156111585781516001600160a01b031687529582019590820190600101611133565b509495945050505050565b6bffffffffffffffffffffffff8516815267ffffffffffffffff841660208201526001600160a01b03831660408201526080606082018190526000906111ab9083018461111f565b9695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156111f4576111f46111b5565b604052919050565b600067ffffffffffffffff821115611216576112166111b5565b5060051b60200190565b6000806040838503121561123357600080fd5b8235915060208084013567ffffffffffffffff81111561125257600080fd5b8401601f8101861361126357600080fd5b8035611276611271826111fc565b6111cb565b81815260059190911b8201830190838101908883111561129557600080fd5b928401925b828410156112b35783358252928401929084019061129a565b80955050505050509250929050565b6000602082840312156112d457600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b600082611316576113166112f1565b500690565b634e487b7160e01b600052601160045260246000fd5b6000600182016113435761134361131b565b5060010190565b8082028115828204841417610cca57610cca61131b565b600082611370576113706112f1565b500490565b80820180821115610cca57610cca61131b565b80516001600160a01b038116811461139f57600080fd5b919050565b600080600080608085870312156113ba57600080fd5b84516bffffffffffffffffffffffff811681146113d657600080fd5b8094505060208086015167ffffffffffffffff80821682146113f757600080fd5b81955061140660408901611388565b9450606088015191508082111561141c57600080fd5b508601601f8101881361142e57600080fd5b805161143c611271826111fc565b81815260059190911b8201830190838101908a83111561145b57600080fd5b928401925b828410156114805761147184611388565b82529284019290840190611460565b979a9699509497505050505050565b6000602082840312156114a157600080fd5b5051919050565b6000602082840312156114ba57600080fd5b81516114c5816110e5565b9392505050565b60005b838110156114e75781810151838201526020016114cf565b50506000910152565b600082516115028184602087016114cc565b9190910192915050565b60006020828403121561151e57600080fd5b6114c582611388565b828152604060208201526000611540604083018461111f565b949350505050565b6000602080838503121561155b57600080fd5b825167ffffffffffffffff81111561157257600080fd5b8301601f8101851361158357600080fd5b8051611591611271826111fc565b81815260059190911b820183019083810190878311156115b057600080fd5b928401925b828410156115ce578351825292840192908401906115b5565b979650505050505050565b8481526080602082015260006115f2608083018661111f565b6001600160a01b03949094166040830152506060015292915050565b60018060a01b038416815282602082015260606040820152600082518060608401526116418160808501602087016114cc565b601f01601f19169190910160800194935050505056fea2646970667358221220d672ebca955b135bba04269f975c1d830b6c01a910c1dc162e87aa847f08757364736f6c63430008110033";

type CoinFlipConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CoinFlipConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CoinFlip__factory extends ContractFactory {
  constructor(...args: CoinFlipConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CoinFlip> {
    return super.deploy(overrides || {}) as Promise<CoinFlip>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CoinFlip {
    return super.attach(address) as CoinFlip;
  }
  override connect(signer: Signer): CoinFlip__factory {
    return super.connect(signer) as CoinFlip__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoinFlipInterface {
    return new utils.Interface(_abi) as CoinFlipInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoinFlip {
    return new Contract(address, _abi, signerOrProvider) as CoinFlip;
  }
}
