{
  "version": "3.2",
  "log": [
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "495489f77b62c8d5b7041163fad59da0252f0fe1dca75daa634eef87a291a400",
          "withoutMetadata": "3dc3108c40d0eaed32318f4aa08bd6346ddcef9cf984a024cfbfc41254f21e10",
          "linkedWithoutMetadata": "3dc3108c40d0eaed32318f4aa08bd6346ddcef9cf984a024cfbfc41254f21e10"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdrawBnb()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:73"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributeBnbHoldersThreshold",
            "src": "contracts/CoinFlip.sol:63"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyLinkThreshold",
            "src": "contracts/CoinFlip.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "distributeBnbHoldersThreshold",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:63"
            },
            {
              "label": "buyLinkThreshold",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:66"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "495489f77b62c8d5b7041163fad59da0252f0fe1dca75daa634eef87a291a400",
          "withoutMetadata": "3dc3108c40d0eaed32318f4aa08bd6346ddcef9cf984a024cfbfc41254f21e10",
          "linkedWithoutMetadata": "3dc3108c40d0eaed32318f4aa08bd6346ddcef9cf984a024cfbfc41254f21e10"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdrawBnb()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:73"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          },
          {
            "kind": "state-variable-assignment",
            "name": "distributeBnbHoldersThreshold",
            "src": "contracts/CoinFlip.sol:63"
          },
          {
            "kind": "state-variable-assignment",
            "name": "buyLinkThreshold",
            "src": "contracts/CoinFlip.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "distributeBnbHoldersThreshold",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:63"
            },
            {
              "label": "buyLinkThreshold",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:66"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:16",
        "version": {
          "withMetadata": "4b3471a42b97efdbe83ab4fc83cf4655ce33830d73a251af4437a9b78f8e03f9",
          "withoutMetadata": "025de4096b8c08e660bfef72d75dc8cf16f51066e438fcc8b5394957e82d46fe",
          "linkedWithoutMetadata": "025de4096b8c08e660bfef72d75dc8cf16f51066e438fcc8b5394957e82d46fe"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "askOracle(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/TykheLuckyOracle.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/TykheLuckyOracle.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/TykheLuckyOracle.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/TykheLuckyOracle.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/TykheLuckyOracle.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:54"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "68b4662da0078684b31a8eaf68498504f8f8610387f44edb0dde53c7a7dbb79f",
          "withoutMetadata": "0b7ff9b193ff5bc56ce68dc03224443ffbfe94a4357ed33fbdf078ff4b0e57a6",
          "linkedWithoutMetadata": "0b7ff9b193ff5bc56ce68dc03224443ffbfe94a4357ed33fbdf078ff4b0e57a6"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdrawBnb()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "68b4662da0078684b31a8eaf68498504f8f8610387f44edb0dde53c7a7dbb79f",
          "withoutMetadata": "0b7ff9b193ff5bc56ce68dc03224443ffbfe94a4357ed33fbdf078ff4b0e57a6",
          "linkedWithoutMetadata": "0b7ff9b193ff5bc56ce68dc03224443ffbfe94a4357ed33fbdf078ff4b0e57a6"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdrawBnb()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:15",
        "version": {
          "withMetadata": "fca1072910d75709471499c7953945f1a6dd4f6aabbfef9739b3104d5f6e61e9",
          "withoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f",
          "linkedWithoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)",
          "fundAndRequestRandomWords(uint256)",
          "askOracle(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/TykheLuckyOracle.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/TykheLuckyOracle.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/TykheLuckyOracle.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:17"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:19"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:23"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:27"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:44"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:48"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:50"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:51"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "4e48ff55cf9262402b94ccd93d663744f546cee76def14689b897e9704fb6f86",
          "withoutMetadata": "97ef69e175f52bf5e0637661f986cd4b5bd4b54a0980d1172ca8defc0ddb71bd",
          "linkedWithoutMetadata": "97ef69e175f52bf5e0637661f986cd4b5bd4b54a0980d1172ca8defc0ddb71bd"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdrawBnb(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "4e48ff55cf9262402b94ccd93d663744f546cee76def14689b897e9704fb6f86",
          "withoutMetadata": "97ef69e175f52bf5e0637661f986cd4b5bd4b54a0980d1172ca8defc0ddb71bd",
          "linkedWithoutMetadata": "97ef69e175f52bf5e0637661f986cd4b5bd4b54a0980d1172ca8defc0ddb71bd"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdrawBnb(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:15",
        "version": {
          "withMetadata": "fca1072910d75709471499c7953945f1a6dd4f6aabbfef9739b3104d5f6e61e9",
          "withoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f",
          "linkedWithoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)",
          "fundAndRequestRandomWords(uint256)",
          "askOracle(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/TykheLuckyOracle.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/TykheLuckyOracle.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/TykheLuckyOracle.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:17"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:19"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:23"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:27"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:44"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:48"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:50"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:51"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "157585215a06d88de13d4ae1dbbd3d5f17bef5415ca22323bcc8dc352baa6cd9",
          "withoutMetadata": "6097646bc82481877c985830f43ddaced5c347c3d8bdfe7b610609f2c8a6a66b",
          "linkedWithoutMetadata": "6097646bc82481877c985830f43ddaced5c347c3d8bdfe7b610609f2c8a6a66b"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdrawBnb(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "157585215a06d88de13d4ae1dbbd3d5f17bef5415ca22323bcc8dc352baa6cd9",
          "withoutMetadata": "6097646bc82481877c985830f43ddaced5c347c3d8bdfe7b610609f2c8a6a66b",
          "linkedWithoutMetadata": "6097646bc82481877c985830f43ddaced5c347c3d8bdfe7b610609f2c8a6a66b"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdrawBnb(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:15",
        "version": {
          "withMetadata": "fca1072910d75709471499c7953945f1a6dd4f6aabbfef9739b3104d5f6e61e9",
          "withoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f",
          "linkedWithoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)",
          "fundAndRequestRandomWords(uint256)",
          "askOracle(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/TykheLuckyOracle.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/TykheLuckyOracle.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/TykheLuckyOracle.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:17"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:19"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:23"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:27"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:44"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:48"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:50"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:51"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "992186c07c68f9487282d85f76c101aecb8a3ec209451c38daa7994064959ed4",
          "withoutMetadata": "b94b2b9be2ce1f8339e9fa369912dfa1233e3247a606afdfae0db575b382fbea",
          "linkedWithoutMetadata": "b94b2b9be2ce1f8339e9fa369912dfa1233e3247a606afdfae0db575b382fbea"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdrawBnb(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "992186c07c68f9487282d85f76c101aecb8a3ec209451c38daa7994064959ed4",
          "withoutMetadata": "b94b2b9be2ce1f8339e9fa369912dfa1233e3247a606afdfae0db575b382fbea",
          "linkedWithoutMetadata": "b94b2b9be2ce1f8339e9fa369912dfa1233e3247a606afdfae0db575b382fbea"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdrawBnb(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:15",
        "version": {
          "withMetadata": "fca1072910d75709471499c7953945f1a6dd4f6aabbfef9739b3104d5f6e61e9",
          "withoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f",
          "linkedWithoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)",
          "fundAndRequestRandomWords(uint256)",
          "askOracle(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/TykheLuckyOracle.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/TykheLuckyOracle.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/TykheLuckyOracle.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:17"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:19"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:23"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:27"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:44"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:48"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:50"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:51"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "8071c7f0fcb262041310c2eb2f4d784e99405797a3e4569c91b203a5d5115cb1",
          "withoutMetadata": "01bc7bf568a8713c8872d80a03e2a9ee97e112996a621d07358e16f96f4f1f86",
          "linkedWithoutMetadata": "01bc7bf568a8713c8872d80a03e2a9ee97e112996a621d07358e16f96f4f1f86"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdrawBnb()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "8071c7f0fcb262041310c2eb2f4d784e99405797a3e4569c91b203a5d5115cb1",
          "withoutMetadata": "01bc7bf568a8713c8872d80a03e2a9ee97e112996a621d07358e16f96f4f1f86",
          "linkedWithoutMetadata": "01bc7bf568a8713c8872d80a03e2a9ee97e112996a621d07358e16f96f4f1f86"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdrawBnb()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "8071c7f0fcb262041310c2eb2f4d784e99405797a3e4569c91b203a5d5115cb1",
          "withoutMetadata": "01bc7bf568a8713c8872d80a03e2a9ee97e112996a621d07358e16f96f4f1f86",
          "linkedWithoutMetadata": "01bc7bf568a8713c8872d80a03e2a9ee97e112996a621d07358e16f96f4f1f86"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdrawBnb()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:15",
        "version": {
          "withMetadata": "fca1072910d75709471499c7953945f1a6dd4f6aabbfef9739b3104d5f6e61e9",
          "withoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f",
          "linkedWithoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)",
          "fundAndRequestRandomWords(uint256)",
          "askOracle(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/TykheLuckyOracle.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/TykheLuckyOracle.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/TykheLuckyOracle.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:17"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:19"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:23"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:27"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:44"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:48"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:50"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:51"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "19f8d007cf20d62e47e37c14d87335c78c9a6787ade38d392fcf18027d509d13",
          "withoutMetadata": "9a3dbdc4a5edb344e6d977cd5d0f364fe7e32ee226af31ae9dcd68f0a907c419",
          "linkedWithoutMetadata": "9a3dbdc4a5edb344e6d977cd5d0f364fe7e32ee226af31ae9dcd68f0a907c419"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdrawBnb()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "BasicToken": {
        "src": "contracts/LinkToken.sol:80",
        "version": {
          "withMetadata": "aef7fb746f5242ea5d85ea2fd89b2875850e3405e5bc0a6d8ff7c44b5f07ab1a",
          "withoutMetadata": "59123f96b651351f893caf4712147be31fa60fb4d54f736cdc04d7e89c1b5347",
          "linkedWithoutMetadata": "59123f96b651351f893caf4712147be31fa60fb4d54f736cdc04d7e89c1b5347"
        },
        "inherit": [
          "ERC20Basic"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "transfer(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "BasicToken",
              "label": "balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/LinkToken.sol:83"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "contracts/LinkToken.sol:115",
        "inherit": [
          "ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Basic": {
        "src": "contracts/LinkToken.sol:68",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Basic",
              "label": "totalSupply",
              "type": "t_uint256",
              "src": "contracts/LinkToken.sol:69"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC677": {
        "src": "contracts/LinkToken.sol:219",
        "inherit": [
          "ERC20",
          "ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256,bytes storage pointer)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC677Receiver": {
        "src": "contracts/LinkToken.sol:206",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onTokenTransfer(address,uint256,bytes storage pointer)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC677Token": {
        "src": "contracts/LinkToken.sol:231",
        "inherit": [
          "ERC677",
          "ERC20",
          "ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256,bytes storage pointer)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkToken": {
        "src": "contracts/LinkToken.sol:278",
        "version": {
          "withMetadata": "a028037ddb3f1a679c5c748bca3a936fde0f28604762e9998f553512f6954ff4",
          "withoutMetadata": "9683d8cede40658b032eaeeaa2bba5c27c1d379f95390d3747e7242cddd9ee86",
          "linkedWithoutMetadata": "9683d8cede40658b032eaeeaa2bba5c27c1d379f95390d3747e7242cddd9ee86"
        },
        "inherit": [
          "ERC677Token",
          "ERC677",
          "StandardToken",
          "BasicToken",
          "ERC20",
          "ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "LinkToken()",
          "transferAndCall(address,uint256,bytes storage pointer)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts/LinkToken.sol:14",
        "version": {
          "withMetadata": "b5438678a83a95e65dd38861c90c566505e70542bb16b3fd321aecdd92fa449b",
          "withoutMetadata": "0491044c25070bde90c79376af748024f4c4390eb79b5d0ab0efddc6565d330b",
          "linkedWithoutMetadata": "0491044c25070bde90c79376af748024f4c4390eb79b5d0ab0efddc6565d330b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StandardToken": {
        "src": "contracts/LinkToken.sol:130",
        "version": {
          "withMetadata": "8ffabdf28e095af1919bfd8f7e86123686a0b83a9fbf2e7d883a40cbcf37e496",
          "withoutMetadata": "f0fdf4a09de01a04ff6025e0b449beb0daa18baf3fb4d5435e86a2aaafb14ebd",
          "linkedWithoutMetadata": "f0fdf4a09de01a04ff6025e0b449beb0daa18baf3fb4d5435e86a2aaafb14ebd"
        },
        "inherit": [
          "BasicToken",
          "ERC20",
          "ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseApproval(address,uint256)",
          "decreaseApproval(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "StandardToken",
              "label": "allowed",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/LinkToken.sol:132"
            }
          ],
          "types": {
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "19f8d007cf20d62e47e37c14d87335c78c9a6787ade38d392fcf18027d509d13",
          "withoutMetadata": "9a3dbdc4a5edb344e6d977cd5d0f364fe7e32ee226af31ae9dcd68f0a907c419",
          "linkedWithoutMetadata": "9a3dbdc4a5edb344e6d977cd5d0f364fe7e32ee226af31ae9dcd68f0a907c419"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdrawBnb()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:15",
        "version": {
          "withMetadata": "fca1072910d75709471499c7953945f1a6dd4f6aabbfef9739b3104d5f6e61e9",
          "withoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f",
          "linkedWithoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)",
          "fundAndRequestRandomWords(uint256)",
          "askOracle(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/TykheLuckyOracle.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/TykheLuckyOracle.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/TykheLuckyOracle.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:17"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:19"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:23"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:27"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:44"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:48"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:50"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:51"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "b833a2dbf7e0f69496357f08cfa0b5a6f4a2d589fe6a88c136debc403136a381",
          "withoutMetadata": "d847956fcaf2aedb1c0f141d5e2aaf846882430d10dff8300cf6691f350f5a3a",
          "linkedWithoutMetadata": "d847956fcaf2aedb1c0f141d5e2aaf846882430d10dff8300cf6691f350f5a3a"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:16",
        "version": {
          "withMetadata": "b833a2dbf7e0f69496357f08cfa0b5a6f4a2d589fe6a88c136debc403136a381",
          "withoutMetadata": "d847956fcaf2aedb1c0f141d5e2aaf846882430d10dff8300cf6691f350f5a3a",
          "linkedWithoutMetadata": "d847956fcaf2aedb1c0f141d5e2aaf846882430d10dff8300cf6691f350f5a3a"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription()",
          "cancelSubscription()",
          "withdrawLink()",
          "getLinkBalance()",
          "fundAndRequestRandomWords()",
          "flipCoin(bool,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:71"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:49"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLink",
            "src": "contracts/CoinFlip.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbHolders",
            "src": "contracts/CoinFlip.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reservedBnbForBuyLinkPercentage",
            "src": "contracts/CoinFlip.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "reserveBnbPercentageForHolders",
            "src": "contracts/CoinFlip.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:24"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:28"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:33"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:42"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:45"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:49"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:54"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)652_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:58"
            },
            {
              "label": "reservedBnbForBuyLink",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:59"
            },
            {
              "label": "reservedBnbHolders",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:60"
            },
            {
              "label": "reservedBnbForBuyLinkPercentage",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:61"
            },
            {
              "label": "reserveBnbPercentageForHolders",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:62"
            },
            {
              "label": "dexRouter",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IUniswapV2Router02)637",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IUniswapV2Router02)637": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)652_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)652_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "win",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:15",
        "version": {
          "withMetadata": "fca1072910d75709471499c7953945f1a6dd4f6aabbfef9739b3104d5f6e61e9",
          "withoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f",
          "linkedWithoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)",
          "fundAndRequestRandomWords(uint256)",
          "askOracle(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/TykheLuckyOracle.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/TykheLuckyOracle.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/TykheLuckyOracle.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:17"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:19"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:23"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:27"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:44"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:48"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:50"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:51"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:15",
        "version": {
          "withMetadata": "6e6152c5f007d65a836ead8f46212503b2836dcbaffa29e5053153b0914b22ef",
          "withoutMetadata": "e50cb502f36bce87fabd61a164b8299e00543c056873fb7b286703c53ae73382",
          "linkedWithoutMetadata": "e50cb502f36bce87fabd61a164b8299e00543c056873fb7b286703c53ae73382"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)",
          "getLinkBalance()",
          "fundVRF()",
          "fundAndRequestRandomWords()",
          "getLastFlips()",
          "flipCoin(bool,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:16"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:19"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:23"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:27"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:32"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:41"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:44"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:48"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:50"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)255_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:56"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)255_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)255_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "flipResult",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:15",
        "version": {
          "withMetadata": "6e6152c5f007d65a836ead8f46212503b2836dcbaffa29e5053153b0914b22ef",
          "withoutMetadata": "e50cb502f36bce87fabd61a164b8299e00543c056873fb7b286703c53ae73382",
          "linkedWithoutMetadata": "e50cb502f36bce87fabd61a164b8299e00543c056873fb7b286703c53ae73382"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)",
          "getLinkBalance()",
          "fundVRF()",
          "fundAndRequestRandomWords()",
          "getLastFlips()",
          "flipCoin(bool,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/CoinFlip.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/CoinFlip.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/CoinFlip.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/CoinFlip.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/CoinFlip.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/CoinFlip.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "wordsIndex",
            "src": "contracts/CoinFlip.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:16"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:17"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:19"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:23"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:27"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:32"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:41"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:44"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:48"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:50"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:51"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:52"
            },
            {
              "label": "wordsIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:53"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(Flip)255_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:56"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)255_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)255_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "flipResult",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:15",
        "version": {
          "withMetadata": "fca1072910d75709471499c7953945f1a6dd4f6aabbfef9739b3104d5f6e61e9",
          "withoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f",
          "linkedWithoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)",
          "fundAndRequestRandomWords(uint256)",
          "askOracle(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/TykheLuckyOracle.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/TykheLuckyOracle.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/TykheLuckyOracle.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:17"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:19"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:23"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:27"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:44"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:48"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:50"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:51"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:15",
        "version": {
          "withMetadata": "fca1072910d75709471499c7953945f1a6dd4f6aabbfef9739b3104d5f6e61e9",
          "withoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f",
          "linkedWithoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)",
          "fundAndRequestRandomWords(uint256)",
          "askOracle(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/TykheLuckyOracle.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/TykheLuckyOracle.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/TykheLuckyOracle.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:17"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:19"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:23"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:27"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:44"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:48"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:50"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:51"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:15",
        "version": {
          "withMetadata": "fca1072910d75709471499c7953945f1a6dd4f6aabbfef9739b3104d5f6e61e9",
          "withoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f",
          "linkedWithoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)",
          "fundAndRequestRandomWords(uint256)",
          "askOracle(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/TykheLuckyOracle.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/TykheLuckyOracle.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/TykheLuckyOracle.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:17"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:19"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:23"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:27"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:44"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:48"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:50"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:51"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:353",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeFactory": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:208",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeRouter01": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:73",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeRouter02": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:167",
        "inherit": [
          "IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:369",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PancakeLibrary": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:274",
        "version": {
          "withMetadata": "175122e74c6a2448b508fe28b34cb5e46729cf7175a675555c5683eb7e4f28f2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PancakeRouter": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:375",
        "version": {
          "withMetadata": "3f7fbed8aec2d38c920a1f035963ea0bc34beea699ee8a3a9e491544503fa4e4",
          "withoutMetadata": "fe9a515a7e2825d1136d3c7bd0156f08767310d3c9241635cfa7255885a73866",
          "linkedWithoutMetadata": "fe9a515a7e2825d1136d3c7bd0156f08767310d3c9241635cfa7255885a73866"
        },
        "inherit": [
          "IPancakeRouter02",
          "IPancakeRouter01"
        ],
        "libraries": [
          "SafeMath",
          "PancakeLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address,address)",
          "()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeRouter",
            "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:386"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:378"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:379"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:260",
        "version": {
          "withMetadata": "e8bb2503e05100c408121c50f1a6d6e201896f677f8c21cead2a1616e8b96ac4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts/BSC Testnet Connections/PancakeRouter.sol:26",
        "version": {
          "withMetadata": "80102c522c8e3f23b21b3394fb25769812355038601408c5b3a0c89fe9111219",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CoinFlip": {
        "src": "contracts/CoinFlip.sol:15",
        "version": {
          "withMetadata": "cea4decb524f650e84a2c63720b834f5e2c0511fd0c27d8d75825615851ce635",
          "withoutMetadata": "5bd142fe8307602e0c3e2d2c17105efc0e8b05ef3c31da6f59381a87c5feda0c",
          "linkedWithoutMetadata": "5bd142fe8307602e0c3e2d2c17105efc0e8b05ef3c31da6f59381a87c5feda0c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()",
          "getLastFlips()",
          "flipCoin(bool,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CoinFlip",
            "src": "contracts/CoinFlip.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:16"
            },
            {
              "label": "usersFlips",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Flip)255_storage)",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:18"
            },
            {
              "label": "usersFlipsCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:19"
            },
            {
              "label": "tykheLuckyOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ITykheLuckyOracle)498",
              "contract": "CoinFlip",
              "src": "contracts/CoinFlip.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ITykheLuckyOracle)498": {
              "label": "contract ITykheLuckyOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Flip)255_storage)": {
              "label": "mapping(uint256 => struct Flip)",
              "numberOfBytes": "32"
            },
            "t_struct(Flip)255_storage": {
              "label": "struct Flip",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "flipNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "flipResult",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITykheLuckyOracle": {
        "src": "contracts/ITykheLuckyOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "askOracle()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TykheLuckyOracle": {
        "src": "contracts/TykheLuckyOracle.sol:15",
        "version": {
          "withMetadata": "fca1072910d75709471499c7953945f1a6dd4f6aabbfef9739b3104d5f6e61e9",
          "withoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f",
          "linkedWithoutMetadata": "8cbb27d0781c0a0005e1eafe61f5cbc977bc6e4ebb1e75dc1e98e6f86392534f"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "()",
          "requestRandomWords()",
          "getSubscriptionDetails()",
          "pendingRequestExists()",
          "topUpSubscription(uint256)",
          "addConsumer(address)",
          "removeConsumer(address)",
          "cancelSubscription(address)",
          "withdraw(uint256,address)",
          "fundAndRequestRandomWords(uint256)",
          "askOracle(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TykheLuckyOracle",
            "src": "contracts/TykheLuckyOracle.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "vrfCoordinator",
            "src": "contracts/TykheLuckyOracle.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "link_token_contract",
            "src": "contracts/TykheLuckyOracle.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "keyHash",
            "src": "contracts/TykheLuckyOracle.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/TykheLuckyOracle.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/TykheLuckyOracle.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/TykheLuckyOracle.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "COORDINATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(VRFCoordinatorV2Interface)241",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:16"
            },
            {
              "label": "LINKTOKEN",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(LinkTokenInterface)152",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:17"
            },
            {
              "label": "s_subscriptionId",
              "offset": 20,
              "slot": "1",
              "type": "t_uint64",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:19"
            },
            {
              "label": "vrfCoordinator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:23"
            },
            {
              "label": "link_token_contract",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:27"
            },
            {
              "label": "keyHash",
              "offset": 0,
              "slot": "4",
              "type": "t_bytes32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:32"
            },
            {
              "label": "callbackGasLimit",
              "offset": 0,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:41"
            },
            {
              "label": "requestConfirmations",
              "offset": 4,
              "slot": "5",
              "type": "t_uint16",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:44"
            },
            {
              "label": "numWords",
              "offset": 6,
              "slot": "5",
              "type": "t_uint32",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:48"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:50"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:51"
            },
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TykheLuckyOracle",
              "src": "contracts/TykheLuckyOracle.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)152": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(VRFCoordinatorV2Interface)241": {
              "label": "contract VRFCoordinatorV2Interface",
              "numberOfBytes": "20"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "BEP20Token": {
        "src": "contracts/BSC Testnet Connections/BEP20Token.sol:347",
        "version": {
          "withMetadata": "ea872a728bf16c8ad89facdb2b0125b9ab7f9d77fd64342a43b9d96aba778038",
          "withoutMetadata": "d6ec17d7f9b6e119f2b1a758e4f737e830093153b5714697e0ac56791d942c67",
          "linkedWithoutMetadata": "d6ec17d7f9b6e119f2b1a758e4f737e830093153b5714697e0ac56791d942c67"
        },
        "inherit": [
          "Ownable",
          "IBEP20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "getOwner()",
          "decimals()",
          "symbol()",
          "name()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "mint(uint256)",
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BEP20Token",
            "src": "contracts/BSC Testnet Connections/BEP20Token.sol:359"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/BSC Testnet Connections/BEP20Token.sol:289"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BEP20Token",
              "src": "contracts/BSC Testnet Connections/BEP20Token.sol:350"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "BEP20Token",
              "src": "contracts/BSC Testnet Connections/BEP20Token.sol:352"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BEP20Token",
              "src": "contracts/BSC Testnet Connections/BEP20Token.sol:354"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "4",
              "type": "t_uint8",
              "contract": "BEP20Token",
              "src": "contracts/BSC Testnet Connections/BEP20Token.sol:355"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "BEP20Token",
              "src": "contracts/BSC Testnet Connections/BEP20Token.sol:356"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "BEP20Token",
              "src": "contracts/BSC Testnet Connections/BEP20Token.sol:357"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts/BSC Testnet Connections/BEP20Token.sol:112",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBEP20": {
        "src": "contracts/BSC Testnet Connections/BEP20Token.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "decimals()",
          "symbol()",
          "name()",
          "getOwner()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/BSC Testnet Connections/BEP20Token.sol:288",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/BSC Testnet Connections/BEP20Token.sol:296"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/BSC Testnet Connections/BEP20Token.sol:289"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:98",
        "version": {
          "withMetadata": "e774f782a37263f644871c47f47523deeb77ed6e37645b8b797a9ef4e0e5b3ff",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:240",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeCallee": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:256",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pancakeCall(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeERC20": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:75",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeFactory": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:24",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:203",
        "version": {
          "withMetadata": "4aac2cd12b6cc6306419c139454f2530ce8dc86fb2d78fdb2f2fc26b81cbcb52",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PancakeERC20": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:112",
        "version": {
          "withMetadata": "b55e111799c297f95fe3243d55014369645ffc6023a626190250260b80ab51c8",
          "withoutMetadata": "b55e111799c297f95fe3243d55014369645ffc6023a626190250260b80ab51c8",
          "linkedWithoutMetadata": "b55e111799c297f95fe3243d55014369645ffc6023a626190250260b80ab51c8"
        },
        "inherit": [
          "IPancakeERC20"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeERC20",
            "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:130"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:118"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:119"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:120"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:122"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:125"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PancakeFactory": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:452",
        "version": {
          "withMetadata": "f9f38632e59c58c184f9595ca616176f6bdfa4c80c26b7c561caafadb5451edf",
          "withoutMetadata": "71d6aea5d77c89d61d078d24e7ab2fdc67c43de52a34bd271470fbb2f271a015",
          "linkedWithoutMetadata": "71d6aea5d77c89d61d078d24e7ab2fdc67c43de52a34bd271470fbb2f271a015"
        },
        "inherit": [
          "IPancakeFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakeFactory",
            "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:463"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PancakeFactory",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:455"
            },
            {
              "label": "feeToSetter",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PancakeFactory",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:456"
            },
            {
              "label": "getPair",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "PancakeFactory",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:458"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PancakeFactory",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:459"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PancakePair": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:260",
        "version": {
          "withMetadata": "3c4eae323c1d53141d05be1f266dee95396c6483aaf96a57a707f3ec087d4b6d",
          "withoutMetadata": "3c4eae323c1d53141d05be1f266dee95396c6483aaf96a57a707f3ec087d4b6d",
          "linkedWithoutMetadata": "3c4eae323c1d53141d05be1f266dee95396c6483aaf96a57a707f3ec087d4b6d"
        },
        "inherit": [
          "PancakeERC20",
          "IPancakeERC20",
          "IPancakePair"
        ],
        "libraries": [
          "SafeMath",
          "UQ112x112",
          "Math"
        ],
        "methods": [
          "getReserves()",
          "()",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PancakePair",
            "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:310"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:279"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:118"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:119"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:120"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:122"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PancakeERC20",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:125"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:267"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:268"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:269"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:271"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:272"
            },
            {
              "label": "blockTimestampLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:273"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:275"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:276"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:277"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "PancakePair",
              "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:279"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UQ112x112": {
        "src": "contracts/BSC Testnet Connections/PancakeFactory.sol:226",
        "version": {
          "withMetadata": "942571b02b24ff92b7fe67a9ac37f72a0d5c160db5006f63669b0a5ba11d0583",
          "withoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b",
          "linkedWithoutMetadata": "84fb217c68f538a0f01a573a7f9b991a4d3395eb699ba1c1542256b37f46c48b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "WBNB": {
        "src": "contracts/BSC Testnet Connections/WBNB.sol:7",
        "version": {
          "withMetadata": "0d8b51e1510100bc81189adc2f43dfb1c0caf3d1dd3dd483b9eb03b48bbc21cf",
          "withoutMetadata": "744a68f567b443c4366f0c261dd32e3ea8a733d1a5f2f7403a36248dd397e910",
          "linkedWithoutMetadata": "744a68f567b443c4366f0c261dd32e3ea8a733d1a5f2f7403a36248dd397e910"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/BSC Testnet Connections/WBNB.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts/BSC Testnet Connections/WBNB.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "decimals",
            "src": "contracts/BSC Testnet Connections/WBNB.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "WBNB",
              "label": "name",
              "type": "t_string_storage",
              "src": "contracts/BSC Testnet Connections/WBNB.sol:8"
            },
            {
              "contract": "WBNB",
              "label": "symbol",
              "type": "t_string_storage",
              "src": "contracts/BSC Testnet Connections/WBNB.sol:9"
            },
            {
              "contract": "WBNB",
              "label": "decimals",
              "type": "t_uint8",
              "src": "contracts/BSC Testnet Connections/WBNB.sol:10"
            },
            {
              "contract": "WBNB",
              "label": "balanceOf",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/BSC Testnet Connections/WBNB.sol:17"
            },
            {
              "contract": "WBNB",
              "label": "allowance",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/BSC Testnet Connections/WBNB.sol:18"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string storage pointer"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}